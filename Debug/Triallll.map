Archive member included because of file (symbol)

d:/embedded course/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              d:/embedded course/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD d:/embedded course/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./MCAL/Timer/timer.o
LOAD ./MCAL/External Interrupt/exint.o
LOAD ./MCAL/DIO/dio.o
LOAD ./ECUAL/LED/led.o
LOAD ./ECUAL/Button/button.o
LOAD ./APP/app.o
LOAD ./main.o
LOAD d:/embedded course/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD d:/embedded course/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD d:/embedded course/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x7b4
 *(.vectors)
 .vectors       0x00000000       0x54 d:/embedded course/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 d:/embedded course/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc d:/embedded course/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000060        0x8 d:/embedded course/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000068        0x4 d:/embedded course/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000068                __vector_1
                0x00000068                __vector_12
                0x00000068                __bad_interrupt
                0x00000068                __vector_6
                0x00000068                __vector_3
                0x00000068                __vector_11
                0x00000068                __vector_13
                0x00000068                __vector_17
                0x00000068                __vector_19
                0x00000068                __vector_7
                0x00000068                __vector_5
                0x00000068                __vector_4
                0x00000068                __vector_9
                0x00000068                __vector_2
                0x00000068                __vector_15
                0x00000068                __vector_8
                0x00000068                __vector_14
                0x00000068                __vector_10
                0x00000068                __vector_16
                0x00000068                __vector_18
                0x00000068                __vector_20
 .text          0x0000006c        0x0 ./MCAL/Timer/timer.o
 .text          0x0000006c        0x0 ./MCAL/External Interrupt/exint.o
 .text          0x0000006c        0x0 ./MCAL/DIO/dio.o
 .text          0x0000006c        0x0 ./ECUAL/LED/led.o
 .text          0x0000006c        0x0 ./ECUAL/Button/button.o
 .text          0x0000006c        0x0 ./APP/app.o
 .text          0x0000006c        0x0 ./main.o
 .text          0x0000006c        0x0 d:/embedded course/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x0000006c                . = ALIGN (0x2)
 *(.text.*)
 .text.MDIO_VOIDSetPinDirection
                0x0000006c      0x1e4 ./MCAL/DIO/dio.o
                0x0000006c                MDIO_VOIDSetPinDirection
 .text.MDIO_VOIDSetPortDirection
                0x00000250       0x82 ./MCAL/DIO/dio.o
                0x00000250                MDIO_VOIDSetPortDirection
 .text.MDIO_VOIDSetPinValue
                0x000002d2      0x1e4 ./MCAL/DIO/dio.o
                0x000002d2                MDIO_VOIDSetPinValue
 .text.MDIO_VOIDSetPortValue
                0x000004b6       0x82 ./MCAL/DIO/dio.o
                0x000004b6                MDIO_VOIDSetPortValue
 .text.MDIO_VOIDTogglePinValue
                0x00000538       0xfa ./MCAL/DIO/dio.o
                0x00000538                MDIO_VOIDTogglePinValue
 .text.MDIO_U8GetPinValue
                0x00000632       0xf2 ./MCAL/DIO/dio.o
                0x00000632                MDIO_U8GetPinValue
 .text.MDIO_U8GetPortValue
                0x00000724       0x82 ./MCAL/DIO/dio.o
                0x00000724                MDIO_U8GetPortValue
 .text.main     0x000007a6        0xa ./main.o
                0x000007a6                main
 .text.libgcc   0x000007b0        0x0 d:/embedded course/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000007b0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000007b0        0x0 d:/embedded course/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000007b0                exit
                0x000007b0                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000007b0        0x4 d:/embedded course/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000007b4                _etext = .

.data           0x00800060        0x0 load address 0x000007b4
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 d:/embedded course/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./MCAL/Timer/timer.o
 .data          0x00800060        0x0 ./MCAL/External Interrupt/exint.o
 .data          0x00800060        0x0 ./MCAL/DIO/dio.o
 .data          0x00800060        0x0 ./ECUAL/LED/led.o
 .data          0x00800060        0x0 ./ECUAL/Button/button.o
 .data          0x00800060        0x0 ./APP/app.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 d:/embedded course/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x0
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 d:/embedded course/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 ./MCAL/Timer/timer.o
 .bss           0x00800060        0x0 ./MCAL/External Interrupt/exint.o
 .bss           0x00800060        0x0 ./MCAL/DIO/dio.o
 .bss           0x00800060        0x0 ./ECUAL/LED/led.o
 .bss           0x00800060        0x0 ./ECUAL/Button/button.o
 .bss           0x00800060        0x0 ./APP/app.o
 .bss           0x00800060        0x0 ./main.o
 .bss           0x00800060        0x0 d:/embedded course/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                0x00800060                PROVIDE (__bss_end, .)
                0x000007b4                __data_load_start = LOADADDR (.data)
                0x000007b4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800060        0x0
                0x00800060                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800060                PROVIDE (__noinit_end, .)
                0x00800060                _end = .
                0x00800060                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0xb94
 *(.stab)
 .stab          0x00000000       0xe4 ./MCAL/Timer/timer.o
 .stab          0x000000e4       0xd8 ./MCAL/External Interrupt/exint.o
                                 0xe4 (size before relaxing)
 .stab          0x000001bc      0x660 ./MCAL/DIO/dio.o
                                0x66c (size before relaxing)
 .stab          0x0000081c       0xd8 ./ECUAL/LED/led.o
                                 0xe4 (size before relaxing)
 .stab          0x000008f4       0xd8 ./ECUAL/Button/button.o
                                 0xe4 (size before relaxing)
 .stab          0x000009cc       0xd8 ./APP/app.o
                                 0xe4 (size before relaxing)
 .stab          0x00000aa4       0xf0 ./main.o
                                 0xfc (size before relaxing)

.stabstr        0x00000000      0x4e9
 *(.stabstr)
 .stabstr       0x00000000      0x4e9 ./MCAL/Timer/timer.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Triallll.elf elf32-avr)
LOAD linker stubs
